// 20-06-2020
const BASKET="basket";class Basket{static getQuantity(){return document.querySelector("#basket-quantity")}static getSum(){return document.querySelector("#basket-sum")}static getGoods(){return document.querySelector("#basket-goods")}static getClear(){return document.querySelector("#basket-clear")}static viewQuantity(){return Storage.get().reduce((t,e)=>t+=+e.number,0)}static viewSum(){return Storage.get().reduce((t,e)=>t+=e.price*e.number,0)}static viewGoods(){return Storage.get().reduce((t,e,a)=>t+=`<p data-id="${a}"><i></i><b>${e.name}</b>, ${e.size}: ${e.price}, ${e.number}</p>`,"")}static removeGoods(t){if("I"===t.target.tagName){const e=t.target.parentNode.dataset.id;Storage.remove(e),Basket.reload(),Checkout.reload()}}static clearBasket(){Storage.clear(),Basket.getQuantity().innerHTML=0,Basket.getSum().innerHTML=0,Basket.getGoods().innerHTML=""}static reload(){Basket.getQuantity()&&(Storage.has()?(Basket.getQuantity().innerHTML=Basket.viewQuantity(),Basket.getSum().innerHTML=Basket.viewSum(),Basket.getGoods().innerHTML=Basket.viewGoods()):(Basket.getQuantity().innerHTML=0,Basket.getSum().innerHTML=0,Basket.getGoods().innerHTML=""))}}class Items{static getItems(){return document.querySelectorAll(".button")}static toBasket(){const t={name:this.dataset.name,size:this.dataset.size,price:this.dataset.price,number:"1",img:this.dataset.img};Storage.has()?Storage.add(t):Storage.set(t),Basket.reload()}}class Storage{static has(){return null!==localStorage.getItem(BASKET)}static get(){return JSON.parse(localStorage.getItem(BASKET))}static set(t){if(Array.isArray(t))localStorage.setItem(BASKET,JSON.stringify(t));else{const e=[];e.push(t),localStorage.setItem(BASKET,JSON.stringify(e))}}static add(t){const e=JSON.parse(localStorage.getItem(BASKET));if(e.find(e=>e.name===t.name)){e.find(e=>e.name===t.name).number++}else e.push(t);localStorage.setItem(BASKET,JSON.stringify(e))}static clear(){localStorage.clear(BASKET)}static remove(t){const e=JSON.parse(localStorage.getItem(BASKET));e.splice(t,1),0===e.length?localStorage.removeItem(BASKET):localStorage.setItem(BASKET,JSON.stringify(e))}}class Checkout{static getOrderGoods(){return document.querySelector("#order-goods")}static getOrderSum(){return document.querySelector("#order-sum")}static viewGoods(){if(Storage.has()){return Storage.get().reduce((t,e,a)=>t+`<div data-id="${a}" class="product"><div class="product-img"><img src="${e.img}" alt=""></div><div class="product-name">${e.name}</div><div class="product-size">${e.size}</div><div class="product-price"><small>${e.price}грн</small><p>${e.price*e.number}грн</p></div><div class="product-quantity"><span class="minus"></span><span class="number">${e.number}</span><span class="plus"></span></div><div class="product-delete"><i></i></div></div>`,"")}}static viewSum(){if(Storage.has())return Storage.get().map(t=>t.price*t.number).reduce((t,e)=>t+ +e,0)}static changeGoods(t){const e=t.target.parentNode.parentNode.dataset.id,a=Storage.get();"I"===t.target.tagName?(a.splice(e,1),0===a.length?Storage.clear():Storage.set(a)):"minus"===t.target.className?a[e].number>1?a[e].number--:a.splice(e,1):"plus"===t.target.className&&a[e].number++,Storage.set(a),Checkout.reload(),Basket.reload()}static reload(){null!==Checkout.getOrderGoods()&&(Storage.has()?(Checkout.getOrderGoods().innerHTML=Checkout.viewGoods(),Checkout.getOrderSum().innerHTML=Checkout.viewSum()):(Checkout.getOrderGoods().innerHTML="",Checkout.getOrderSum().innerHTML=""))}}Items.getItems().forEach(t=>t.addEventListener("click",Items.toBasket)),Basket.getClear()&&Basket.getClear().addEventListener("click",Basket.clearBasket),Basket.reload(),Basket.getGoods()&&Basket.getGoods().addEventListener("click",Basket.removeGoods),Checkout.reload(),Checkout.getOrderGoods().addEventListener("click",t=>Checkout.changeGoods(t));